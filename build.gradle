// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    repositories {
        google()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots'}
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.21"
        classpath 'com.google.gms:google-services:4.3.13'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.1'
        //classpath 'com.github.triplet.gradle:play-publisher:3.7.0-SNAPSHOT'
        //classpath 'com.google.firebase:firebase-appdistribution-gradle:3.0.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "org.sonarqube" version "3.0"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from :"$rootProject.rootDir/scripts/output-archive.gradle"
apply from :"$rootProject.rootDir/scripts/email-commit.gradle"

//
//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
//    kotlinOptions {
//        freeCompilerArgs += "-Xopt-in=io.ktor.util.KtorExperimentalAPI"
//    }
//}
//
//tasks.withType(Checkstyle){
//    reports{
//        xml.required = false
//        html.required = true
//        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
//    }
//}
//
//configurations.all {
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested
//        if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
//            details.useVersion kotlin_version
//        }
//    }
//}